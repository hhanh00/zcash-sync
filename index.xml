<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WarpSync on Zcash Warp Sync</title><link>https://hhanh00.github.io/zcash-sync/</link><description>Recent content in WarpSync on Zcash Warp Sync</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://hhanh00.github.io/zcash-sync/index.xml" rel="self" type="application/rss+xml"/><item><title>Download</title><link>https://hhanh00.github.io/zcash-sync/execution_model/tasks/download/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/execution_model/tasks/download/</guid><description>This task consists of retrieving Compact Blocks from the server and sending them downstream to the other tasks.
Lightwalletd offers a streaming interface that allows us to retrieve a range of blocks without blocking.
The start height is our latest synchronization height + 1. The end height is the latest block. The range can potentially be very large, but we don&amp;rsquo;t buffer more than a chunk of blocks and therefore can process large ranges.</description></item><item><title>Purpose</title><link>https://hhanh00.github.io/zcash-sync/light_wallet/purpose/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/light_wallet/purpose/</guid><description>The main purpose of a Light Wallet or any wallet for that matter is to provide:
the capability to receive funds, the capability to send funds, and display the funds available In addition, Light Wallet should be less resource-demanding than regular wallets. In the past, the latter term has been used to refer to full nodes.
Full node wallets download the entire blockchain and keep a fairly extensive representation of the data within.</description></item><item><title>Tables</title><link>https://hhanh00.github.io/zcash-sync/data_model/tables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/data_model/tables/</guid><description>In the previous section, we discusses the overall goals of scanning the blockchain. Now we are going to look at the data obtained after the scan completes.
From the &amp;ldquo;largest&amp;rdquo; data to the &amp;ldquo;smallest&amp;rdquo; data:
Blocks First we have blocks. We keep the block:
height, hash and time, sapling tree The sapling tree field is unique to Zcash. The wallet needs it to update the note witnesses.
Transactions The wallet only keeps the transactions for which it has detected either an incoming note or a spent note.</description></item><item><title>Block Chunks</title><link>https://hhanh00.github.io/zcash-sync/data_model/chunks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/data_model/chunks/</guid><description>Warp Sync processes groups of sequential blocks and not blocks one by one.
The size of the chunks are dynamically determined and varies based on the block contents and device available resources.
At the end of a chunk, Warp Sync writes a checkpoint that allow a wallet to resume processing if interrupted.
A checkpoint has the synchronization state at a given block height H:
block height, hash, time, etc. stored in the blocks table, transactions that were made before and including H, received and spent notes before and including H.</description></item><item><title>Decrypt</title><link>https://hhanh00.github.io/zcash-sync/execution_model/tasks/decrypt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/execution_model/tasks/decrypt/</guid><description>One of the major tasks in terms of computation is trial decryption.
Every output note (EPK, CIPHERTEXT, CMU) needs to be trial decrypted with every account Incoming Viewing Key (IVK).
There are currently more than 20 million notes (and it increases). If you have 2 accounts, it means having to trial decrypt 40 million times.
Typically, one trial decryption takes ~1 ms (the exact time depends on your CPU). Therefore trial decryption can make up for a substantial portion of the synchronization.</description></item><item><title>Pipeline</title><link>https://hhanh00.github.io/zcash-sync/execution_model/pipeline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/execution_model/pipeline/</guid><description/></item><item><title>Privacy</title><link>https://hhanh00.github.io/zcash-sync/light_wallet/privacy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/light_wallet/privacy/</guid><description>Non-private coins make up the vast majority of wallets. Almost all cryptocurrency users rely on them. As a result, they have come to expect a certain level of functionality and speed.
But private coins present significant challenges that non-private coins do not have. Because the content of the blockchain is hidden or encrypted, third party services cannot index the transactions and maintain address balances in advance.
Imagine having a dictionary where every word and definition is redacted.</description></item><item><title>Agents</title><link>https://hhanh00.github.io/zcash-sync/execution_model/agents/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/execution_model/agents/</guid><description/></item><item><title>Rollback</title><link>https://hhanh00.github.io/zcash-sync/data_model/rollback/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/data_model/rollback/</guid><description>Warp Sync detects a reorganization when it receives a block from the server that has a previous hash different from the hash of the latest block it has.
This means the server has switched over to a different sequence of blocks.
As explained in the page about Reorganization, the wallet must rollback to a common previous state but we don&amp;rsquo;t exactly know when we deviated. Besides, we cannot rollback any number of blocks because we can apply blocks but we cannot undo a block.</description></item><item><title>UTXO Model</title><link>https://hhanh00.github.io/zcash-sync/light_wallet/utxo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/light_wallet/utxo/</guid><description>Zcash is a Blockchain that uses the UTXO model first introduced in Bitcoin.
UTXO Initially, every account/address has an empty balance. The only way to get coins into an account is through a transaction (TX).
Transactions take inputs and produce outputs. Except for the mining transaction called the coinbase transaction, every transaction has inputs that fund the outputs.
We&amp;rsquo;ll not consider mining or minting and therefore we&amp;rsquo;ll ignore the coinbase transaction.</description></item><item><title>Witnesses</title><link>https://hhanh00.github.io/zcash-sync/execution_model/tasks/witnesses/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/execution_model/tasks/witnesses/</guid><description>Note Commitment Tree Pedersen Hash Merkle Path Spend Statement ZKP</description></item><item><title>Scan / Sync</title><link>https://hhanh00.github.io/zcash-sync/light_wallet/scan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/light_wallet/scan/</guid><description>Scanning the blockchain can be done in several ways. Ultimately they all achieve the same goal:
Determine which notes you received, ie adding incoming funds, Cross-out the notes you spent, ie substracting outgoing funds, And finally, allowing you to spend your UTXO. The first two bullet points are typical of any UTXO based cryptocurrency wallet, but the last bullet point may be unusual.
Once the blockchain scan finishes, your wallet is said to be synchronized.</description></item><item><title>Reorganization</title><link>https://hhanh00.github.io/zcash-sync/light_wallet/reorg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/light_wallet/reorg/</guid><description>Reorganizations happen when several miners submit different blocks at the same height.
It is a rare occurence but it happens.
For example, if you have the following situation:
Miner A submits block 1001 after block 1000 Miner B submits a different block 1001 Miner C submits a block 1002 based on miner B&amp;rsquo;s block 1001 Now we have two chains that deviate at block 1000:
one built from Miner A&amp;rsquo;s block 1001 the other from Miner B&amp;rsquo;s block 1001 and Miner C&amp;rsquo;s 1002 Since nodes cannot determine a-priori which chains will get longer after seeing block 1001, some of them first follow Miner A while others follow Miner B.</description></item></channel></rss>