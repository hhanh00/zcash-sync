<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Note Selection on Zcash Warp Sync</title><link>https://hhanh00.github.io/zcash-sync/note_selection/</link><description>Recent content in Note Selection on Zcash Warp Sync</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://hhanh00.github.io/zcash-sync/note_selection/index.xml" rel="self" type="application/rss+xml"/><item><title>Overview</title><link>https://hhanh00.github.io/zcash-sync/note_selection/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/note_selection/overview/</guid><description>Zcash unified addresses make creating transactions more complex than before.
In the past, an address corresponded to a single receiver and was tied to a specific type of note. For example, a z-addr is a sapling address and only receives sapling funds. A unified address may contain more than one receiver. Simply put, it combines several legacy addresses.
When the user wants to pay to a unified address, the wallet app has to determine which unspent transaction outputs it can use to minimize information leakage.</description></item><item><title>Settings</title><link>https://hhanh00.github.io/zcash-sync/note_selection/settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/note_selection/settings/</guid><description>To make a payment, we take funds from notes we received previously but haven&amp;rsquo;t spent yet and we send the funds to the receipients&amp;rsquo; addresses.
Inputs Our inputs are the UTXO (for transparent funds), Sapling notes and Orchard notes. Notes from different types are not directly fungible, but we can make a transaction that uses several types of notes. Also, notes must be used as a whole. We cannot use a fraction of a note.</description></item><item><title>Example 1: T2T</title><link>https://hhanh00.github.io/zcash-sync/note_selection/example01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/note_selection/example01/</guid><description>Info Amounts are in kzats (1 kzats = 1000 zats = 0.01 mZEC)
Let&amp;rsquo;s assume we choose (Transparent, Sapling, Orchard) in the Pool Usage Order which means we&amp;rsquo;d rather use our Transparent notes first and keep our Orchard notes.
Suppose we have the following notes:
T: 50 S: 50 O: 50 Let&amp;rsquo;s consider the following order:
order # T S O 1 10 The number is the quantity for a given address type.</description></item><item><title>Example 2: Z2Z (Sapling)</title><link>https://hhanh00.github.io/zcash-sync/note_selection/example02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/note_selection/example02/</guid><description>Info Amounts are in kzats (1 kzats = 1000 zats = 0.01 mZEC)
Let&amp;rsquo;s assume we choose (Transparent, Sapling, Orchard) in the Pool Usage Order which means we&amp;rsquo;d rather use our Transparent notes first and keep our Orchard notes.
Suppose we have the following notes:
T: 50 S: 50 O: 50 Let&amp;rsquo;s consider the following order:
order # T S O 1 10 The number is the quantity for a given address type.</description></item><item><title>Example 3: Z2Z (Orchard)</title><link>https://hhanh00.github.io/zcash-sync/note_selection/example03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/note_selection/example03/</guid><description>Info Amounts are in kzats (1 kzats = 1000 zats = 0.01 mZEC)
Let&amp;rsquo;s assume we choose (Transparent, Sapling, Orchard) in the Pool Usage Order which means we&amp;rsquo;d rather use our Transparent notes first and keep our Orchard notes.
Suppose we have the following notes:
T: 50 S: 50 O: 50 Let&amp;rsquo;s consider the following order:
order # T S O 1 10 The number is the quantity for a given address type.</description></item><item><title>Example 4: Z2T (Sapling)</title><link>https://hhanh00.github.io/zcash-sync/note_selection/example04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/note_selection/example04/</guid><description>Info Amounts are in kzats (1 kzats = 1000 zats = 0.01 mZEC)
Let&amp;rsquo;s assume we choose (Transparent, Sapling, Orchard) in the Pool Usage Order which means we&amp;rsquo;d rather use our Transparent notes first and keep our Orchard notes.
Suppose we have the following notes:
T: 50 S: 50 O: 50 Let&amp;rsquo;s consider the following order:
order # T S O 1 10 The number is the quantity for a given address type.</description></item><item><title>Example 5: Z2T (Orchard)</title><link>https://hhanh00.github.io/zcash-sync/note_selection/example05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/note_selection/example05/</guid><description>Info Amounts are in kzats (1 kzats = 1000 zats = 0.01 mZEC)
Suppose we have the following notes:
T: 50 S: 50 O: 50 Let&amp;rsquo;s consider the following order:
order # T S O 1 10 The number is the quantity for a given address type.
Settings Note By default, the transaction will not cross from shielded to transparent. We need to set the privacy policy to AnyPool.</description></item><item><title>Example 6: T2Z (Sapling)</title><link>https://hhanh00.github.io/zcash-sync/note_selection/example06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/note_selection/example06/</guid><description>Info Amounts are in kzats (1 kzats = 1000 zats = 0.01 mZEC)
Let&amp;rsquo;s assume we choose (Transparent, Sapling, Orchard) in the Pool Usage Order which means we&amp;rsquo;d rather use our Transparent notes first and keep our Orchard notes.
Suppose we have the following notes:
T: 50 S: 50 O: 50 Let&amp;rsquo;s consider the following order:
order # T S O 1 10 The number is the quantity for a given address type.</description></item><item><title>Example 7: Z2Z (Sap/Orc)</title><link>https://hhanh00.github.io/zcash-sync/note_selection/example07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/note_selection/example07/</guid><description>Info Amounts are in kzats (1 kzats = 1000 zats = 0.01 mZEC)
Let&amp;rsquo;s assume we choose (Transparent, Sapling, Orchard) in the Pool Usage Order which means we&amp;rsquo;d rather use our Transparent notes first and keep our Orchard notes.
Suppose we have the following notes:
T: 50 S: 50 O: 50 Let&amp;rsquo;s consider the following order:
order # T S O 1 10 The number is the quantity for a given address type.</description></item><item><title>Example 8 - Iterative Search</title><link>https://hhanh00.github.io/zcash-sync/note_selection/example08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/note_selection/example08/</guid><description>Summary This example demonstrates the iterative process towards finding a suitable set of notes. Fees are calculated based on the structure of the transaction, but they also impact the transaction. Therefore, the algorithm needs to try out several combinations.
Info Amounts are in kzats (1 kzats = 1000 zats = 0.01 mZEC)
Let&amp;rsquo;s consider the following orders:
order # T S O 1 10 The number is the quantity for a given address type.</description></item><item><title>Example 9 - Failure</title><link>https://hhanh00.github.io/zcash-sync/note_selection/example09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/note_selection/example09/</guid><description>Summary This is the same as the previous example but we disable transparent inputs. The transaction fails because it cannot pay for the fees.
Info Amounts are in kzats (1 kzats = 1000 zats = 0.01 mZEC)
Let&amp;rsquo;s consider the following orders:
order # T S O 1 10 The number is the quantity for a given address type.
Order 1 is a t-addr for 10 Suppose we have the following notes:</description></item><item><title>Example 10 - Multi Payments</title><link>https://hhanh00.github.io/zcash-sync/note_selection/example10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hhanh00.github.io/zcash-sync/note_selection/example10/</guid><description>Summary This example combines multiple orders of different address types. It also demonstrates how the algorithm handles multiple receivers in a unified address.
Info Amounts are in kzats (1 kzats = 1000 zats = 0.01 mZEC)
Let&amp;rsquo;s consider the following orders:
order # T S O 1 10 2 20 3 30 4 40 40 5 50 50 6 60 60 7 70 70 70 The number is the quantity for a given address type.</description></item></channel></rss>